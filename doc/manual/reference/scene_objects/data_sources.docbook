<?xml version="1.0" encoding="utf-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="data_sources"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Data source</title>

  <para>
    <informalfigure><screenshot><mediaobject><imageobject>
      <imagedata fileref="images/scene_objects/data_source_and_data_objects.png" format="PNG" scale="50" />
    </imageobject></mediaobject></screenshot></informalfigure>

    A <emphasis>data source</emphasis> is an essential part of every <link linkend="usage.modification_pipeline">pipeline</link> as it provides the input data that is passed to the modifiers. 
    The data source of the current pipeline appears under the "Data source" section of the pipeline editor as depicted in this screenshot.
    Most of the time you will work with the <emphasis>External File</emphasis> data
    source type, which imports the input data for the pipeline from one or more files stored on your local computer or a remote machine.
  </para>

  <para>
    <informaltable>
      <tgroup cols="2">
        <colspec colname='name'/>
        <colspec colname='descr'/>
        <thead>
          <row>
            <entry>Data&#xA0;source</entry>
            <entry>Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>External&#xA0;file</entry>
            <entry>Reads the simulation data from an external file.</entry>
          </row>
          <row>
            <entry>Static&#xA0;source</entry>
            <entry>Feeds a static dataset that is held in memory to the data pipeline.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </para>

  <simplesect xml:id="scene_objects.file_source">
    <title>External file</title>
    <para>

      <informalfigure><screenshot><mediaobject><imageobject>
        <imagedata fileref="images/scene_objects/file_source_panel.png" format="PNG" scale="50" />
      </imageobject></mediaobject></screenshot></informalfigure>

      The "External file" panel lets you configure the parameters of the data source, in particular from which external file(s) the input data for the current data pipeline should be read. 
      The panel is automatically displayed after you <link linkend="usage.import">imported a data file</link>
      via OVITO's <menuchoice><guimenuitem>Load File</guimenuitem></menuchoice> or <menuchoice><guimenuitem>Load Remote File</guimenuitem></menuchoice> menu functions.
      You can return to the panel at any time by selecting the topmost entry under the "Data source" section of the
      <link linkend="usage.modification_pipeline.pipeline_listbox">pipeline editor</link>.
    </para>
  </simplesect>

  <simplesect>
    <title>Toolbar functions</title>

    <para>
    <informalfigure role="inline"><screenshot><mediaobject><imageobject>
      <imagedata fileref="images/scene_objects/file_source_toolbar.svg" format="SVG" contentwidth="388" />
    </imageobject></mediaobject></screenshot></informalfigure>

    <variablelist>
    <varlistentry>
      <term>Pick new file</term>

        <listitem>
          <para>
            Selects a different data file on disk, which will subsequently serve as new input for the current
            data pipeline. All modifiers in the pipeline are retained but the data they operate on gets replaced.
          </para>
          <para>
            Note that OVITO will <emphasis>not</emphasis> automatically detect whether the file you picked is part of a numbered sequence of files in the same directory. 
            In order to load a series of files as a new animation, you need to manually enter a search pattern into the "File pattern" input field.
            Furthermore, note that OVITO will automatically adjust the viewports to fully show the newly loaded input dataset. If you would like to preserve the current view configuration,
            first use the <menuchoice><guimenuitem>Create Camera</guimenuitem></menuchoice> function from the <link linkend="usage.viewports.menu">viewport menu</link> before loading the new data file.
          </para>
          </listitem>
      </varlistentry>

      <varlistentry>
        <term>Pick new remote file</term>
        <listitem>
          <para>
            Same as above, but allows you to load data from a new remote URL instead of picking a file from the local filesystem.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Reload file</term>
        <listitem>
          <para>
            Reloads the data for the current animation frame from the external file. This function is useful
            if the file contents have been updated or replaced, for example after re-running a simulation or editing the file in an external program.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Update trajectory frames</term>
        <listitem>
          <para>
             Refreshes the sequence of animation frames. OVITO will search the directory to find new files matching the filename pattern and/or 
             rescan the loaded file to discover any new animation frames that have been appended to the trajectory file.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Load entire trajectory into memory</term>
        <listitem>
          <para>
             This option lets OVITO load all frames of the current trajectory into memory to speed up 
             access to the data or enable smooth animation playback in the interactive viewports.
             Note that you should make sure first that your computer has sufficent free memory to hold all
             trajectory frames. If this option is turned off (the default), OVITO holds only a single frame
             of the trajectory in memory at a time to reduce the memory footprint.
          </para>
        </listitem>
      </varlistentry>

    </variablelist>

     </para>

   </simplesect>

  <simplesect>
    <title>File sequence - Search pattern</title>
    <para>
      This section allows you to specify a filename search pattern to load multiple files from the 
      same directory as one trajectory. The search pattern must contain a single '*' wildcard character,
      which will match any sequence of digits in a filename. All files matching the search pattern 
      will be combined into one long trajectory, showing the contained simulation frames back to back.
      See also <link linkend="usage.import.sequence">this section</link> on how to import simulation trajectories.
    </para>
    <para>
      OVITO automatically generates a default search pattern for you when importing 
      a file with a number it its name. You can turn this behavior permanently off 
      by unchecking the "auto-generate" option.
    </para>
  </simplesect>

  <simplesect>
    <title>Trajectory - Playback ratio</title>
    <para>
      After importing a new trajectory consisting of <emphasis>N</emphasis> simulation snapshots,
      OVITO will adjust the animation interval (which is shown as timeline below the viewports) 
      to the same length and show one trajectory frame per animation frame.
      Thus, there will be a one-to-one relationship between imported trajectory frame and 
      rendered animation frames.  
    </para>
    <para>
      If desired, this standard 1/1 frame ratio can be changed by pressing the <guibutton>Change</guibutton>
      button, which opens the <emphasis>Configure trajectory playback</emphasis> dialog (see next section).
    </para>
  </simplesect>

  <simplesect id="scene_objects.file_source.configure_playback">
    <title>Configure trajectory playback</title>
    <para>
      <informalfigure><screenshot><mediaobject><imageobject>
        <imagedata fileref="images/scene_objects/configure_trajectory_playback.png" format="PNG" scale="75" />
      </imageobject></mediaobject></screenshot></informalfigure>
      This dialog lets you control how the snapshots from the loaded simulation trajectory 
      are mapped to OVITO's animation timeline. You can change the default 1/1 mapping to 
      either a 1/n mapping, in which case each trajectory frame is replicated and rendered n
      times, or to a n/1 mapping, in which case only every n-th 
      trajectory frame will be rendered.
    </para>
    <para>
      A 1/n mapping is useful if you want to stretch a simulation trajectory consisting of only relatively few
      snapshots and render a longer movie. OVITO provides the <link linkend="particles.modifiers.smooth_trajectory">Smooth trajectory</link> modifier,
      which can be applied to compute new intermediate frames by interpolating the particle positions of successive 
      frames in the input trajectory.
    </para>
    <para>
      A n/1 mapping is useful if the loaded simulation trajectory consists of excessively many snapshots
      and you want to render a short movie showing the whole trajectory but having fewer frames. 
    </para>
    <para>
      See also the <link linkend="usage.animation">advanced animations</link> section for further information.
    </para>
  </simplesect>

  <simplesect>
    <title>See also</title>
    <para>
      <simplelist>
      <member><pydoc-link href="modules/ovito_pipeline" anchor="ovito.pipeline.FileSource"><classname>FileSource</classname> (Python API)</pydoc-link></member>
      <member><pydoc-link href="modules/ovito_pipeline" anchor="ovito.pipeline.StaticSource"><classname>StaticSource</classname> (Python API)</pydoc-link></member>
      </simplelist>
    </para>
  </simplesect>

</section>
