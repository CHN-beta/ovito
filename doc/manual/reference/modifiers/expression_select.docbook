<?xml version="1.0" encoding="utf-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="viz.modifiers.expression_select"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Expression select</title>

  <para>

    <informalfigure><screenshot><mediaobject><imageobject>
       <imagedata fileref="images/modifiers/expression_select_panel.png" format="PNG" />
    </imageobject></mediaobject></screenshot></informalfigure>

  This modifier selects atoms based on a user-defined criterion.
  The user specifies a Boolean expression, which is evaluated for each
  individual atom. If the expression evaluates to zero (or
  <emphasis>false</emphasis>) then the atom is unselected; otherwise it is
  selected.</para>

  <para>The mathematical expression can contain references to other per-atom
  properties stored in the data channels. Hence this Expression Select
  modifier can be used to select atoms based on properties such as position,
  atom type, energy etc., and any combination thereof. The list of available
  input data channels is displayed in the lower part of the modifier panel.
  Variable names are case-sensitive.</para>

  <simplesect>
    <title>Parameters</title>

    <variablelist>
      <varlistentry>
        <term>Boolean expression</term>

        <listitem>
          <para>This specifies the Boolean expression to be evaluated for each
          atom. The expression syntax understood by the modifier is very
          similar to the C-syntax. Arithmetic expressions can be created from
          float literals, variables or functions using the following operators
          in this order of precedence: <informaltable frame="none">
              <tbody>
                <tr>
                  <td>()</td>

                  <td>expressions in parentheses are evaluated first</td>
                </tr>

                <tr>
                  <td>A^B</td>

                  <td>exponentiation (A raised to the power B)</td>
                </tr>

                <tr>
                  <td>A*B, A/B</td>

                  <td>multiplication and division</td>
                </tr>

                <tr>
                  <td>A+B, A-B</td>

                  <td>addition and subtraction</td>
                </tr>

                <tr>
                  <td>A==B, A!=B, A&lt;B, A&lt;=B, A&gt;B, A&gt;=B</td>

                  <td>comparison between A and B (result is either 0 or
                  1)</td>
                </tr>

                <tr>
                  <td>A &amp;&amp; B</td>

                  <td>logical AND operator: result is 1 if A and B differ from
                  0, else 0</td>
                </tr>

                <tr>
                  <td>A || B</td>

                  <td>logical OR operator: result is 1 if A or B differ from
                  0, else 0</td>
                </tr>
              </tbody>
            </informaltable></para>

          <para>The expression parser supports the following functions:
          <informaltable frame="none">
              <tbody>
                <tr>
                  <td>abs(A)</td>

                  <td>Absolute value of A. If A is negative, returns -A
                  otherwise returns A.</td>
                </tr>

                <tr>
                  <td>acos(A)</td>

                  <td>Arc-cosine of A. Returns the angle, measured in radians,
                  whose cosine is A.</td>
                </tr>

                <tr>
                  <td>acosh(A)</td>

                  <td>Same as acos() but for hyperbolic cosine.</td>
                </tr>

                <tr>
                  <td>asin(A)</td>

                  <td>Arc-sine of A. Returns the angle, measured in radians,
                  whose sine is A.</td>
                </tr>

                <tr>
                  <td>asinh(A)</td>

                  <td>Same as asin() but for hyperbolic sine.</td>
                </tr>

                <tr>
                  <td>atan(A)</td>

                  <td>Arc-tangent of A. Returns the angle, measured in
                  radians, whose tangent is A.</td>
                </tr>

                <tr>
                  <td>atan2(Y,X)</td>

                  <td>Two argument variant of the arctangent function. Returns
                  the angle, measured in radians. This function is documented
                  <link
                  xlink:href="http://en.wikipedia.org/wiki/Atan2">here</link>.</td>
                </tr>

                <tr>
                  <td>atanh(A)</td>

                  <td>Same as atan() but for hyperbolic tangent.</td>
                </tr>

                <tr>
                  <td>avg(A,B,...)</td>

                  <td>Returns the average of all arguments.</td>
                </tr>

                <tr>
                  <td>cos(A)</td>

                  <td>Cosine of A. Returns the cosine of the angle A, where A
                  is measured in radians.</td>
                </tr>

                <tr>
                  <td>cosh(A)</td>

                  <td>Same as cos() but for hyperbolic cosine.</td>
                </tr>

                <tr>
                  <td>exp(A)</td>

                  <td>Exponential of A. Returns the value of e raised to the
                  power A where e is the base of the natural logarithm, i.e.
                  the non-repeating value approximately equal to
                  2.71828182846.</td>
                </tr>

                <tr>
                  <td>A ? B : C</td>

                  <td>If A differs from 0 (i.e. is true), the resulting value of this expression
                  is B, else C.</td>
                </tr>

                <tr>
                  <td>rint(A)</td>

                  <td>Rounds A to the closest integer. 0.5 is rounded to
                  1.</td>
                </tr>

                <tr>
                  <td>ln(A)</td>

                  <td>Natural (base e) logarithm of A.</td>
                </tr>

                <tr>
                  <td>log10(A)</td>

                  <td>Base 10 logarithm of A.</td>
                </tr>

                <tr>
                  <td>log2(A)</td>

                  <td>Base 2 logarithm of A.</td>
                </tr>

                <tr>
                  <td>max(A,B,...)</td>

                  <td>Returns the maximum of all values.</td>
                </tr>

                <tr>
                  <td>min(A,B,...)</td>

                  <td>Returns the minimum of all values.</td>
                </tr>

                <tr>
                  <td>sin(A)</td>

                  <td>Sine of A. Returns the sine of the angle A, where A is
                  measured in radians.</td>
                </tr>

                <tr>
                  <td>sinh(A)</td>

                  <td>Same as sin() but for hyperbolic sine.</td>
                </tr>

                <tr>
                  <td>sqrt(A)</td>

                  <td>Square root of a value.</td>
                </tr>

                <tr>
                  <td>tan(A)</td>

                  <td>Tangent of A. Returns the tangent of the angle A, where
                  A is measured in radians.</td>
                </tr>
              </tbody>
            </informaltable></para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Highlight selected atoms</term>

        <listitem>
          <para>Controls whether the atoms selected by the modifier should be
          hightlighted (with a red color) in the viewports.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </simplesect>

  <simplesect>
    <title>Examples</title>

    <para>Here are some example expressions:</para>

    <para><programlisting>AtomType==1 || AtomType==2
 
sqrt(Position.X*Position.X + Position.Y*Position.Y) &lt; 10</programlisting></para>
  </simplesect>
</section>
