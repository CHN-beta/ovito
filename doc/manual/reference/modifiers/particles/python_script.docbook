<?xml version="1.0" encoding="utf-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="particles.modifiers.python_script"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Python script modifier</title>

  <para>
  
    <informalfigure><screenshot><mediaobject><imageobject>
       <imagedata fileref="images/modifiers/python_script_panel.png" format="PNG" />
    </imageobject></mediaobject></screenshot></informalfigure>
  
  The <emphasis>Python script</emphasis> modifier allows you to write your own modifier functions 
  and integrate them into OVITO's data pipeline framework. In other words, in cases where the available 
  <link linkend="particles.modifiers">built-in modifiers</link> of OVITO are not sufficient for your purposes,
  you can develop new modifiers types which manipulate or analyze particle systems in any way you want.  
  </para>
  
  <para>
  The <emphasis>Python script</emphasis> modifier panel provides an input field
  where you enter the code of the custom modifier function. This modifier function
  will be run by the system every time OVITO needs to recompute the results of the modification pipeline.
  </para>
  
  <para>
  How to write a Python modifier function is described in detail in  
  the <link xlink:href="python/introduction/custom_modifiers.html">Scripting Manual</link>.
  </para>
  
  <para>
  Note that you have to press <guibutton>Commit script</guibutton> after you are done editing
  the Python code in the input field. This will recompile the code and trigger a new evaluation of the modification
  pipeline.
  </para>
  
  <para>
  Furthermore, the text field at the top of the panel allows you to assign a user-defined name to the
  script modifier. This name will be shown in the pipeline editor and makes it easier for you to find the custom modifier
  in the list.
  Also note that it is possible to save the Python script modifier including the current code
  as a <link linkend="modifier_presets">modifier preset</link>. This preset will appear as an additional entry in the list of available
  modifiers, allowing you to easily re-use the custom modifier in future OVITO sessions.
  </para>
  
</section>
