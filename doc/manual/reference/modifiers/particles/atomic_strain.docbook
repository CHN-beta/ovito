<?xml version="1.0" encoding="utf-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="particles.modifiers.atomic_strain"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Atomic strain</title>

  <para>  
    <informalfigure><screenshot><mediaobject><imageobject>
       <imagedata fileref="images/modifiers/atomic_strain_panel.png" format="PNG" />
    </imageobject></mediaobject></screenshot></informalfigure>
    This modifier calculates the atomic-level deformation gradient and the strain tensor at each particle from the relative motion 
    of its neighbors. The two per-particle tensors represent versions of the corresponding <link xlink:href="https://en.wikipedia.org/wiki/Finite_strain_theory#Deformation_gradient_tensor">
    continuum kinematic quantities</link> obtained from averaging the discrete particle displacements over finite volumes around each particle.
  </para>

  <para>
    The deformation calculation is based on two input particle configurations: a <emphasis>reference</emphasis> (or initial) configuration 
    and a <emphasis>current</emphasis> (deformed) configuration. In other words, the local deformation is calculated with
    respect to some explicitly specified initial configuration of the input particles.
    The modifier always considers the currently loaded particle positions as the current configuration. 
    The reference particle positions are by default taken from frame 0 of the same animation sequence. 
    Alternatively, the modifier supports loading the reference particle positions from a separate data file.
  </para>

  <para>
    Conceptually, the calculation of various micromechanical quantities happens in several steps:
    <orderedlist>
        <listitem>First, the particle displacement vectors <inlineequation>{<mathphrase>u<subscript>i</subscript></mathphrase>}</inlineequation> are calculated from the particle positions in the initial and the final configuration.</listitem>
        <listitem>Based on this information, the atomic <link xlink:href="https://en.wikipedia.org/wiki/Finite_strain_theory#Deformation_gradient_tensor">deformation gradient tensor <inlineequation><mathphrase>F</mathphrase></inlineequation></link> is calculated for each particle.</listitem>
        <listitem>Based on <inlineequation><mathphrase>F</mathphrase></inlineequation>, the atomic <link xlink:href="https://en.wikipedia.org/wiki/Finite_strain_theory#Finite_strain_tensors">Green-Lagrangian strain tensor <inlineequation><mathphrase>E</mathphrase></inlineequation></link> is derived for each particle (<inlineequation><mathphrase>E=1/2(F<superscript>T</superscript>F-I)</mathphrase></inlineequation>).</listitem>
        <listitem>Based on E, the <emphasis>von Mises</emphasis> local shear invariant and the hydrostatic strain measure are calculated.</listitem>
        <listitem>Additionally, a <link xlink:href="https://en.wikipedia.org/wiki/Finite_strain_theory#Polar_decomposition_of_the_deformation_gradient_tensor">polar decomposition of the atomic deformation gradient <inlineequation><mathphrase>F</mathphrase></inlineequation></link> yields a local rotation tensor <inlineequation><mathphrase>R</mathphrase></inlineequation> and a stretch tensor <inlineequation><mathphrase>U</mathphrase></inlineequation>.</listitem>
        <listitem>Furthermore, a quantity knows as  <inlineequation><mathphrase>D<superscript>2</superscript><subscript>min</subscript></mathphrase></inlineequation> may be calculated from the particle displacements
        and the deformation gradient F, which is a measure for the non-affine part of the local deformation.</listitem>
    </orderedlist>
  </para>

  <para>
    The modifier outputs these micromechanical quantities as new particle properties. You can use the <link linkend="particles.modifiers.color_coding">Color coding modifier</link>, for example,
    to visualize the values of these properties in OVITO or use the <link linkend="utilities.particle_inspection">Particle Inspection utility</link> to look at the results
    computed for specific particles. Note that the displacements are only intermediate calculation results which are not output by the modifier.
    If you need them, please use the <link linkend="particles.modifiers.displacement_vectors">Displacement vectors modifier</link>.
  </para>

  <simplesect>
    <title>Role of the cutoff radius</title>
    <para>
      The <emphasis>cutoff radius</emphasis> is a parameter that controls the range of neighbors taken
      into account to compute the atomic deformation gradient tensor of a single particle. In other words in determines
      the size of the spherical volume around each particle over which the relative motion of neighboring particles is averaged to obtain
      the continuum deformation measure. As a rule of thumb: Use a small cutoff radius parameter to resolve all local details of the deformation field. 
      On the other hand, a large cutoff radius will yield slowly varying (smooth) deformation values at the atomic sites.
    </para>
    <para>
      Since the deformation gradient at a site is calculated from the relative motion of neighboring particles, it is important to ensure that sufficient
      neighbors are within the given cutoff range (in the undeformed configuration). This puts a lower limit on the 
      cutoff radius that you can safely use. For three-dimensional systems, OVITO requires at a minimum three neighbor particles within
      the cutoff range of the central particle in order to calculate a deformation gradient tensor. Furthermore, these three neighbors must not be co-planar.
      If the cutoff radius has been chosen too small and there are only less than three neighbors within range of the central particle,
      the deformation gradient calculation and all subsequent calculations will fail for this particle. The modifier will notify you about this situation
      in the status field and will, for diagnostic purposes, select all "undercoordinated" particles for which the calculation failed.
      Depending on the situation, you may react to this kind of condition by bumping up the cutoff radius parameter such that more neighbors become within range
      and the calculation succeeds.
    </para>
  </simplesect>

  <para>After calculating the atomic deformation gradient tensor <inlineequation><mathphrase>F</mathphrase></inlineequation>, the
  Green-Lagrangian strain tensor <inlineequation><mathphrase>E=1/2(F<superscript>T</superscript>F-I)</mathphrase></inlineequation> 
  is derived from it. The modifier also calculates the <emphasis>von Mises</emphasis> local shear invariant and the
  volumetric (hydrostatic) part of the strain tensor and outputs these scalar quantities as particle properties.</para>

  <para>The modifier can output the residual of the deformation gradient calculation.
  This is a measure for the non-affine part of the local deformation and was termed
  <inlineequation><mathphrase>D<superscript>2</superscript><subscript>min</subscript></mathphrase></inlineequation>
  by Falk &amp; Langer. This measure was used by these authors as a diagnostic for
  identifying local irreversible shear transformations in amorphous solids.</para>

  <para>The atomic deformation gradient <inlineequation><mathphrase>F</mathphrase></inlineequation> can be decomposed into the matrix product 
  <inlineequation><mathphrase>F=RU</mathphrase></inlineequation> 
  with <inlineequation><mathphrase>R</mathphrase></inlineequation> being a rotation matrix and <inlineequation><mathphrase>U</mathphrase></inlineequation> the right stretch tensor.
  <inlineequation><mathphrase>U</mathphrase></inlineequation> is symmetric positive definite. The local rotation <inlineequation><mathphrase>R</mathphrase></inlineequation> is output by the modifier
  as a particle property named <literal>Rotation</literal>, which is encoded as a quaternion with four components <literal>X</literal>, <literal>Y</literal>, <literal>Z</literal>,
  and <literal>W</literal>. From this, the angle of rotation in radians can be obtained with the formula <inlineequation><mathphrase>2*acos(Rotation.W)</mathphrase></inlineequation>,
  e.g., using the <link linkend="particles.modifiers.compute_property">Compute Property modifier</link>.
  </para>

  <para>Use the <emphasis>"Reference: External file"</emphasis> panel to pick the
  file containing the initial particle positions. Note
  that this reference file must contain the same set of particles as the
  current configuration received by the modifier from the upstream part of the modification pipeline. 
  That means you should not delete particles before applying the <emphasis>Atomic
  strain</emphasis> modifier and the analysis modifier should be usually placed at the
  beginning of the processing pipeline.</para>

  <para>
  To calculate the displacement of a given particle in the current configuration, the modifier needs to
  find the corresponding particle in the reference configuration of the system.
  If particles possess unique IDs (i.e. the <literal>Particle Identifier</literal> property is present), the modifier will
  use this information to map particles from the reference configuration to
  the current configuration and vice versa. If no particle IDs are defined, the modifier assumes
  that particles have the same ordering in both configurations.</para>
  
  <para>
  Note that OVITO assumes particle positions to be column vectors. Some programs such as <emphasis>AtomEye</emphasis> use a different convention
  and assume them to be row vectors.
  </para>

  <simplesect>
    <title>Reference configuration</title>
    <para>
      By default, the modifier obtains the reference particle positions from the currently loaded 
      simulation sequence by evaluating the data pipeline at animation time 0. This default mode
      is denoted as <emphasis>"Constant reference configuration"</emphasis> in the user interface.
      If desired, OVITO allows you to pick an animation frame other than 0 as reference.
    </para>
    <para>
      Alternatively, you can let OVITO calculate incremental deformation quantities using 
      the <emphasis>"Relative to current frame"</emphasis> option. In this mode, a sliding reference
      configuration is used, based on a relative time offset with respect to the current configuration.
      Negative offsets correspond to a reference configuration preceding the current configuration
      in time. An offset of -1, for example, lets OVITO use the animation frame immediately preceding 
      the current frame as reference. Note that, in this case, deformation quantities cannot be calculated at
      frame 0, because there is no preceding frame.
    </para>
    <para>
      If you want to load the reference particle positions from a separate file instead of taking
      them from the currently loaded dataset, you can select "External file" as data source.
      Activating this option will show an additional panel <guilabel>"Reference: External file"</guilabel> allowing you to
      pick the file containing the undeformed particle positions.
    </para>
  </simplesect>

  <simplesect>
    <title>Particle identities</title>
    <para>
      In order to calculate the displacement vectors that enter in the deformation gradient calculation, OVITO needs to build a one-to-one mapping between the particles in the undeformed
      and the deformed configuration. If the particles possess a property named <literal>Particle Identifier</literal>,
      then OVITO will use this identity information to generate the mapping. In such a case, it is okay if the storage order of particles
      in the input file(s) changes with time. However, if particles do not possess unique identifiers, then the modifier requires that
      the reference configuration contains exactly the same number of particles as the current configuration
      and it assumes that they are stored in the same order. This assumption is not always true as some simulation
      codes reorder particles during a simulation run for performance reasons. If you forget to dump the particle IDs or atom IDs
      in addition to the positions during a simulation, you should be aware that OVITO may compute wrong displacement vectors because of
      an invalid default particle mapping. You can use the <link linkend="utilities.particle_inspection">Particle Inspection utility</link>
      to check for the presence of the <literal>Particle Identifier</literal> property after file import.
    </para>
  </simplesect>

  <simplesect>
    <title>Minimum image convention</title>      
      <para>
        This option tells OVITO whether or not to use the <link xlink:href="https://en.wikipedia.org/wiki/Periodic_boundary_conditions#Practical_implementation:_continuity_and_the_minimum_image_convention">minimum image convention</link>
        when calculating the displacement vectors in a system with periodic boundary conditions.
        You should deactivate this option if you work with <emphasis>unwrapped</emphasis> particle coordinates. In this case
        OVITO assumes that particle trajectories are all continuous. On the other hand, if you work with 
        <emphasis>wrapped</emphasis> particle coordinates, this option should be turned on. The minimum image convention
        ensures that displacements are calculated correctly even when particles cross a periodic boundary of the cell
        and were mapped back into the cell by the simulation code. On the other hand, if you intend to analyze system where particles have moved by
        more than half of the simulation box size, then the minimum imagine convention cannot be used. You <emphasis>must</emphasis> 
        use unwrapped coordinates in this case, because large displacements would otherwise be folded back into the periodic cell thanks to 
        the minimum image convention.
      </para>
      <para>
        The following figure shows the effect of the option on the calculated displacement vectors (which in turn affect the other kinematic deformation measures):
          <screenshot><mediaobject><imageobject>
            <imagedata fileref="images/modifiers/displacement_vectors_mapping.svg" format="SVG" scale="100" />
          </imageobject></mediaobject></screenshot>
      </para> 
  </simplesect>  

  <simplesect>
    <title>Technical background</title>
    <para>
      More detailed information on the strain calculation method can be found in the following sources:
      <itemizedlist>
        <listitem><link xlink:href="http://li.mit.edu/Archive/Activities/Archive/Papers/07/Shimizu07a.pdf">Shimizu, Ogata, Li: Mater. Trans. 48 (2007), 2923</link></listitem>
        <listitem><link xlink:href="http://li.mit.edu/A/Graphics/A/annotate_atomic_strain/Doc/main.pdf">Li, Shimizu: Least-Square Atomic Strain</link></listitem>
        <listitem><link xlink:href="http://li.mit.edu/A/Graphics/A/Doc/vonMisesInvariant.pdf">Li: von Mises shear strain invariant</link></listitem>
        <listitem><link xlink:href="http://dx.doi.org/10.1103/PhysRevE.57.7192">Falk, Langer: Phys. Rev. E 57 (1998), 7192</link></listitem>
      </itemizedlist>
    </para>
  </simplesect>
  
  <simplesect>
    <title>Parameters</title>

    <variablelist>
      <varlistentry>
        <term>Cutoff radius</term>
        <listitem>
          <para>Controls the range of neighbors that are taken
          into account to compute the deformation gradient tensor of a particle.
          This radius must be large enough to include at least three non-coplanar neighbors for
          every particle in the reference configuration. The larger the cutoff, the larger 
          the volume over which the local deformation gradient tensor is averaged.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Eliminate homogeneous cell deformation</term>
        <listitem>
          <para>This option lets the modifier first rescale the current
          simulation cell including all particle coordinates to match the 
          cell shape in the reference configuration before calculating the deformation tensors. This effectively eliminates any
          macroscopic, homogeneous deformation of the simulation cell, and the
          calculated deformation tensors will reflect only the internal, microscopic displacements of particles.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Assume unwrapped coordinates</term>
        <listitem>
          <para>This only affects the treatment of simulation cells with
          periodic boundary conditions. If activated, the particle coordinates
          in the reference and the current configuration are taken as is. If
          this option is not active, the minimum image convention is used to
          deal with particles that have crossed a periodic boundary.</para>
        </listitem>
      </varlistentry>
      
      <varlistentry>
        <term>Output deformation gradient tensors</term>
        <listitem>
          <para>If activated, the modifier stores the nine components of the calculated per-particle
          deformation gradient tensors in an output property. Turn this off to save memory if you
          do not need the complete deformation gradient tensors.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Output strain tensors</term>

        <listitem>
          <para>If activated, the modifier stores the six components of the calculated per-particle
          strain tensors in an output property. Turn this off to save memory if you
          do not need the complete strain tensor tensors.</para>
        </listitem>
      </varlistentry>      

      <varlistentry>
        <term>Output non-affine squared displacements</term>

        <listitem>
          <para>If activated, the modifier computes the non-affine displacements in an output
          property. This is the residual of the least squares fit of the deformation gradient
          tensor (i.e. the <inlineequation><mathphrase>D<superscript>2</superscript><subscript>min</subscript></mathphrase></inlineequation>
	  property of Falk &amp; Langer). Turn this off to save memory if you do not need non-affine
	  displacements.</para>
        </listitem>
      </varlistentry>      
      
      <varlistentry>
        <term>Output rotations</term>

        <listitem>
          <para>If activated, the modifier outputs a particle property named <literal>Rotation</literal>
          with the local (micro)rotations obtained from the polar decomposition <inlineequation><mathphrase>F=RU</mathphrase></inlineequation>
          of the atomic deformation gradient. The rotation matrix <inlineequation><mathphrase>R</mathphrase></inlineequation>  
          is converted to a quaternion representation for output.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Output stretch tensors</term>

        <listitem>
          <para>If activated, the modifier outputs a particle property named <literal>Stretch Tensor</literal>
          with the <inlineequation><mathphrase>U</mathphrase></inlineequation> tensors obtained from the polar decomposition <inlineequation><mathphrase>F=RU</mathphrase></inlineequation>
          of the atomic deformation gradient. The symmetric matrix <inlineequation><mathphrase>U</mathphrase></inlineequation>  
          is converted to a six-component representation for output.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Select invalid particles</term>

        <listitem>
          <para>If activated, the modifier selects those particles for which it
          could not calculate the local deformation gradient and strain tensors
          (due to too few neighbors within the cutoff radius).</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Fixed reference configuration</term>
        <listitem>
          <para>If this option is active, the selected animation frame from the reference simulation sequence is used
          as a fixed reference to calculate the displacement vectors. This is the default mode.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Relative to current frame</term>
        <listitem>
          <para>If this option is active, then a changing reference configuration is used to calculate the displacement vectors. 
          This allows computing incremental displacement vectors (similar to discrete velocity vectors).
          The frame offset controls the distance between reference and current frame and can be negative or positive. If it is negative, then the reference frame 
          precedes the current frame in the simulation sequence.
          Note that the displacement vectors will not be computed for simulation frames for which the resulting reference frame is negative or out of range.
          </para>
        </listitem>
      </varlistentry>

    </variablelist>
  </simplesect>

  <simplesect>
  <title>See also</title>
    <para>
      <link xlink:href="python/modules/ovito_modifiers.html#ovito.modifiers.AtomicStrainModifier"><classname>AtomicStrainModifier</classname> (Python API)</link>
    </para>
  </simplesect>
  
</section>
