<?xml version="1.0" encoding="utf-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="viewport_overlays.python_script"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Python script overlay</title>

  <para>
      
    <informalfigure><screenshot><mediaobject><imageobject>
       <imagedata fileref="images/viewport_overlays/python_script_overlay_panel.png" format="PNG" />
    </imageobject></mediaobject></screenshot></informalfigure>
    This <link linkend="viewport_overlays">viewport overlay</link> type allows you to write a custom Python function that can paint arbitrary
    text and graphics on top of an image rendered by OVITO. This makes it possible to enrich a figure or a movie with
    additional information.
  </para>
  <para>  
    The <guibutton>Apply changes</guibutton> button saves the entered Python script and runs it once.
    Any errors that occur during the script execution are displayed in the output area below. 
    Any other script output generated by calls to the built-in <literal>print()</literal> function also appears here. 
    This can be useful for debugging purposes during the development of a script.
    Note that during the first initialization run, the <literal>render()</literal> function defined by the script is not executed yet. 
    However, variables and other functions can be defined in the global scope if needed. This global state will then be available
    to the custom <literal>render()</literal> function.
  </para>
  <para>
    The <literal>render()</literal> script function is called by OVITO each time the viewport is repainted or
    when an image or movie frame is rendered. The function's first parameter is a 
    <link xlink:href="http://pyqt.sourceforge.net/Docs/PyQt5/api/qpainter.html"><literal>QPainter</literal></link> object,
    which is passed in by the system and which allows <literal>render()</literal> to paint over the three-dimensional picture rendered by OVITO 
    by issuing arbitrary drawing commands.
    The second function parameter, <literal>args</literal>, is a dictionary object that contains additional arguments
    such as the viewport being rendered, the render settings, and the projection parameters.
  </para>
  <para>
    The user-defined script has full access to OVITO's data model and can access viewport properties,
    camera and animation settings, modifiers, and data pipeline results. 
    For more information on OVITO's Python interface and the object model, see the <link xlink:href="python/index.html">Scripting Reference</link>.
  </para>
    
</section>
