<?xml version="1.0" encoding="utf-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="usage.import" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Importing data</title>

  <para>To open a simulation file from your local hard disk, choose 
    <menuchoice><guimenu>File</guimenu><guimenuitem>Load File</guimenuitem></menuchoice> from the menu.
    OVITO detects the format of the selected file automatically. See the table below for a <link linkend="usage.import.formats">list of supported formats</link>. 
    Compressed files with a <filename>.gz</filename> suffix can be opened directly.
  </para>
  <para>
    After loading and displaying the data from the selected file, OVITO opens the <link linkend="scene_objects.file_source">file import panel</link> 
    as shown in the screenshot below. At the top of this settings panel you find a row of command buttons. The left-most
    button, for example, allows you to select a new input file and replace the currently loaded data.
    This is useful if you have already set up a sequence of <link linkend="usage.modification_pipeline">data modification or analysis
    steps</link> and now want to re-use it with a different simulation dataset.
  </para>
  <para>
    Hint: Everytime you import a new simulation dataset, OVITO automatically adjusts the visible region in the viewports
    to show the entire simulation box. If you want to suppress the automatic zoom and keep the current view settings when loading a new file, use the 
    <menuchoice><guimenuitem>Create Camera</guimenuitem></menuchoice> function from the <link linkend="usage.viewports.menu">viewport menu</link> first.
  </para>

  <simplesect xml:id="usage.import.sequence">
    <title>Simulation sequences</title>
    <para>    
	    <figure>
	    	<title>The <link linkend="scene_objects.file_source">External File</link> panel</title>
	        <screenshot><mediaobject><imageobject>
	        <imagedata fileref="images/scene_objects/file_wildcard_pattern.png" format="PNG" scale="45" />
	        </imageobject></mediaobject></screenshot>
	    </figure>
       OVITO can load sequences of simulation snapshots (time series). The following scenarios are supported:
       <variablelist>
         <varlistentry><term>Series of files, each containing one frame:</term><listitem>
           <para>
		       This is the default scenario. The program tries to automatically recognize sequences of files in a directory 
		       by looking for other files with a similar name as the one you picked. 
		       To this end OVITO replaces the last number (if any) in the filename with the wildcard character <literal>*</literal> to generate a search pattern 
		       and find other files in the same directory belonging to the consecutive file series. 
		       For instance, if you initially load the file <filename>anim1c_5000.dump</filename>, OVITO generates the search pattern
		       <filename>anim1c_*.dump</filename> to find all matching frames (e.g. <filename>anim1c_0.dump</filename>,
		       <filename>anim1c_1000.dump</filename>, <filename>anim1c_2000.dump</filename>, etc). It is possible to
		       manually edit the search pattern if the one generated by OVITO does not fit (see the screenshot on the right). 
           </para>
         </listitem></varlistentry>
         
         <varlistentry><term>Single file containing multiple frames:</term><listitem>
           <para>
		       The LAMMPS dump and the XYZ file formats can store multiple simulation timesteps in one file.
		       By default, OVITO loads only the first frame from the file to save time. You have to explicitly tell OVITO to look 
		       for additional frames by checking the <emphasis>File contains time series</emphasis> option
		       as shown in the screenshot. OVITO will then quickly scan the entire file to find all frames of the time series. 
           </para>
         </listitem></varlistentry>         
         <varlistentry><term>Series of files, each containing several frames:</term><listitem>
           <para>
		       To load multiple files, each one containing multiple simulation frames, follow these steps: Load the first file from the sequence. 
		       Then check the <emphasis>File contains time series</emphasis> option. Finally, edit the file pattern
		       to include the '<literal>*</literal>' wildcard character to let OVITO find all other matching files in the directory. 
           </para>
         </listitem></varlistentry>         
       </variablelist>
    </para>
    
    <para>
       When a time series was loaded, OVITO displays a timeline with a slider control at 
       the bottom of main window, which allows you to jump between frames. 
       Note that OVITO loads only the simulation frame currently displayed in the viewports into memory to keep memory usage at a minimum.
       Every time you jump between simulation frames the program will load the requested data from the external file(s) on demand.
    </para>
    
  </simplesect>
  
  <simplesect xml:id="usage.import.remote">
    <title>Importing files from remote computers</title>
    <para>
       OVITO has a built-in SSH client to directly access files on remote machines. This capability is useful when working with simulation data stored on 
       remote HPC clusters and saves you from transferring the data to your local desktop computer first.
       To open a simulation file on a remote machine, choose  
       <menuchoice><guimenu>File</guimenu><guimenuitem>Load Remote File</guimenuitem></menuchoice> from the menu.  
    </para>
    <para>
       OVITO currently does not allow you to browse directories on remote machines. That means you have to directly specify
       the full path of a remote file. The format follows the standard URL scheme:
       <screen><command>    sftp://user@hostname/path/filename</command></screen>
       Where <command>sftp://</command> is the file access protocol (Secure File Transfer Protocol), 
       <command>user</command> the SSH login name on the remote machine,
       <command>hostname</command> the name of the remote machine,
       and <command>/path/filename</command> the simulation file to import. It is possible to 
       specify a non-standard port number by appending <command>:portnumber</command> to the hostname.
    </para>
    <para>
       When OVITO connects to the remote machine, it will ask for the login password. Once established, 
       the SSH connection is kept alive until OVITO is quit. OVITO makes a temporary copy of a remote file on the local computer before
       reading the data to speed up subsequent accesses to simulation frames. The local file copies are cached until the end of the program session or 
       until you press <emphasis>Reload</emphasis> in the <link linkend="scene_objects.file_source">External File panel</link>.
    </para>
  </simplesect>
   
  <simplesect xml:id="usage.import.tips">
    <title>Using the command line</title>
    <para>
      If you OVITO from a terminal, you can directly specify a file to load. This works with both local and remote
      files:
       <screen>
    <command>ovito /path/filename</command>
    <command>ovito sftp://hostname/path/filename</command>
       </screen>
    </para>
  </simplesect> 
  
  <simplesect xml:id="usage.import.formats">
  <title>Supported file formats</title>
  <para>
  	OVITO can read particle datasets in the following formats:  
    <informaltable>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>File format</entry>
              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>LAMMPS&#xA0;dump</entry>
              <entry><para>File format used by the <link xlink:href="http://lammps.sandia.gov">LAMMPS molecular dynamics code</link>. OVITO supports both text-based and binary dump files.</para></entry>
            </row>
            <row>
              <entry>LAMMPS&#xA0;data</entry>
              <entry><para>File format used by the <link xlink:href="http://lammps.sandia.gov/doc/read_data.html">LAMMPS molecular dynamics code</link>.</para>
              </entry>
            </row>
            <row>
              <entry>XYZ</entry>
              <entry><para>A simple column-based text format, which is documented <link xlink:href="http://en.wikipedia.org/wiki/XYZ_file_format">here</link>.</para>
			    <para>The basic XYZ format does not contain simulation cell information. OVITO takes the axis-aligned bounding box of particles as the simulation box in this case.
			    The program also supports the <link xlink:href="http://jrkermode.co.uk/quippy/io.html#extendedxyz">extended XYZ format</link>, which includes information on the simulation cell,
			    boundary conditions, and per-particle fields.</para>
                </entry>
            </row>
            <row>
              <entry>POSCAR</entry>
              <entry><para>File format used by the <emphasis>ab initio</emphasis> simulation package <link xlink:href="http://www.vasp.at/">VASP</link>.</para></entry>
            </row>
            <row>
              <entry>IMD</entry>
              <entry><para>File format used by the molecular dynamics code <link xlink:href="http://imd.itap.physik.uni-stuttgart.de/">IMD</link>.</para></entry>
            </row>
            <row>
              <entry>CFG</entry>
              <entry><para>File format used by the <link xlink:href="http://li.mit.edu/Archive/Graphics/A/"><emphasis>AtomEye</emphasis> software</link>.</para></entry>
            </row>
            <row>
              <entry>PARCAS</entry>
              <entry><para>Binary file format written by the MD code <emphasis>Parcas</emphasis> developed in K. Nordlund's group at University of Helsinki.</para></entry>
            </row>
            <row>
              <entry>NetCDF</entry>
              <entry><para>Binary format for molecular dynamics data based on the standard NetCDF container. There exists an <link xlink:href="https://github.com/pastewka/lammps-netcdf">extension module for LAMMPS</link> that adds NetCDF output.</para></entry>
            </row>
            <row>
              <entry>PDB</entry>
              <entry><para>Basic support for Protein Data Bank (PDB) files.</para></entry>
            </row>
            <row>
              <entry>FHI-aims</entry>
              <entry><para>Geometry and log-file formats used by the <emphasis>ab initio</emphasis> simulation package <link xlink:href="https://aimsclub.fhi-berlin.mpg.de/index.php">FHI-aims</link>.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>  
  </para>
  <para>
  	OVITO can load triangle meshes (polygonal data) in the following format:  
    <informaltable>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>File format</entry>
              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>VTK</entry>
              <entry><para>Format used by the <emphasis>Visualization Toolkit</emphasis> (VTK). This text-based format is documented <link xlink:href="http://www.vtk.org/VTK/img/file-formats.pdf">here</link>. Note that OVITO supports only triangular cells.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>  
  </para>
  </simplesect>
  
</section>
