<?xml version="1.0" encoding="utf-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="usage.import" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Importing data</title>

  <para>To open a simulation file from your local hard disk, choose 
    <menuchoice><guimenu>File</guimenu><guimenuitem>Open Local File</guimenuitem></menuchoice> from the menu.
    OVITO will detect the format of the file automatically. See the <link linkend="usage.import.formats">table below</link> for a list of supported formats. 
    The program can directly read compressed files having a <filename>.gz</filename> suffix (text-based formats only).
  </para>

  <simplesect xml:id="usage.import.sequence">
    <title>Simulation time sequences</title>
    <para>    
       OVITO can load a sequence of simulation snapshots. The following scenarios are supported:
       <variablelist>
         <varlistentry><term>Multiple files containing one frame each:</term><listitem>
           <para>
    <informalfigure>
        <mediaobject><imageobject>
        <imagedata fileref="images/scene_objects/file_wildcard_pattern.png" format="PNG" scale="45" />
        </imageobject></mediaobject>
    </informalfigure>
		       This is the default scenario, and the program tries to automatically recognize a sequences of files after you load a first file
		       by looking for other files with a similar name in the same directory. OVITO replaces the last number in the filename (if there is any)
		       with the wildcard character <literal>*</literal> to generate a search pattern and find other files in the same directory belonging to 
		       the animation sequence. For instance, if you initially opened the file <filename>anim1c_5000.dump</filename>, OVITO generates the search pattern
		       <filename>anim1c_*.dump</filename> to find all matching frames (e.g. <filename>anim1c_0.dump</filename>,
		       <filename>anim1c_1000.dump</filename>, <filename>anim1c_2000.dump</filename>, etc). It is possible to
		       manually adjust the search pattern in the <emphasis>Frame sequence</emphasis> panel if the one generated by OVITO does not fit. 
           </para>
         </listitem></varlistentry>
         
         <varlistentry><term>A single file containing multiple frames:</term>><listitem>
           <para>
    <informalfigure>
        <mediaobject><imageobject>
        <imagedata fileref="images/scene_objects/file_contains_multiple_timesteps.png" format="PNG" scale="45" />
        </imageobject></mediaobject>
    </informalfigure>
		       The LAMMPS dump and the XYZ formats can store multiple simulation frames in a single file.
		       By default, OVITO loads only the first frame from a file to save time. You have to explicitly tell OVITO to look 
		       for additional frames by checking the <emphasis>File contains multiple timesteps</emphasis> option
		       in the import settings panel as shown in the screenshot on the right. OVITO will then scan the file for all contained animation frames. 
           </para>
         </listitem></varlistentry>         
         <varlistentry><term>Multiple files containing multiple frames each:</term><listitem>
           <para>
		       To load multiple files, each containing multiple simulation frames, take the following steps: First open the first file from the sequence. 
		       Then activate the <emphasis>File contains multiple timesteps</emphasis> option. Finally, edit the wildcard pattern in the <emphasis>Frame sequence</emphasis>
		       panel to include the '<literal>*</literal>' wildcard character to let OVITO find all matching files in the directory. 
           </para>
         </listitem></varlistentry>         
       </variablelist>
    </para>
    
    <para>
       The timeline at the bottom of OVITO's main window will display all discovered frames of the loaded simulation.
       If the input sequence consists only of a single frame, the timeline is not shown.
    </para>
  </simplesect>
  
  <simplesect xml:id="usage.import.remote">
    <title>Importing files from remote computers</title>
    <para>
       OVITO has a built-in SSH client to directly access files on remote machines. This capability is useful when working with simulation data stored on 
       a HPC cluster and saves you from transferring the data to the local desktop computer first.
       To open a simulation file on a remote machine, choose  
       <menuchoice><guimenu>File</guimenu><guimenuitem>Open Remote File</guimenuitem></menuchoice> from the menu.  
    </para>
    <para>
       In the current version, OVITO does not allow browsing directories on remote machines. That means you have to directly specify
       the full path of a remote file. The format of remote paths follows the URL scheme
       <screen><command>    sftp://user@hostname/path/filename</command></screen>
       Where <command>sftp://</command> is the file access protocol (Secure File Transfer Protocol), 
       <command>user</command> the login for the remote machine,
       <command>hostname</command> the name of the remote machine,
       and <command>/path/filename</command> the path to the file to import. It is possible to 
       specify a non-standard port number by appending <command>:portnumber</command> to the hostname.
    </para>
    <para>
       When OVITO connects to the remote machine, it will ask for the login password. Once established, 
       the SSH connection is kept alive until OVITO is quit. OVITO makes a temporary copy of a remote file on the local computer before
       reading it to speed up subsequent accesses to simulation frames. The local file copies are cached until you quit OVITO or 
       press the <emphasis>Reload</emphasis> button in the import file panel.
    </para>
  </simplesect>
   
  <simplesect xml:id="usage.import.tips">
    <title>Use the command line</title>
    <para>
      When starting OVITO from a terminal, you can directly specify a file to be loaded. This works with both local and remote
      files:
       <screen>
    <command>ovito /path/filename</command>
    <command>ovito sftp://hostname/path/filename</command>
       </screen>
    </para>
  </simplesect> 
  
  <simplesect xml:id="usage.import.formats">
  <title>Supported file formats</title>
  <para>
  	OVITO can read particle data and molecular dynamics output in the following formats:  
    <informaltable>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>File format</entry>
              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>LAMMPS dump</entry>
              <entry><para>File format used by the <link xlink:href="http://lammps.sandia.gov">LAMMPS molecular dynamics code</link>. OVITO supports both text-based and binary dump files.</para></entry>
            </row>
            <row>
              <entry>LAMMPS data</entry>
              <entry><para>File format used by the <link xlink:href="http://lammps.sandia.gov/doc/read_data.html">LAMMPS molecular dynamics code</link>.</para>
              </entry>
            </row>
            <row>
              <entry>XYZ</entry>
              <entry><para>A simple column-based text format, which is documented <link xlink:href="http://en.wikipedia.org/wiki/XYZ_file_format">here</link>.</para>
			    <para>The basic XYZ format does not contain simulation cell information. OVITO takes the axis-aligned bounding box of particles as the simulation box in this case.
			    The program also supports the <link xlink:href="http://jrkermode.co.uk/quippy/io.html#extendedxyz">extended XYZ format</link>, which includes information on the simulation cell,
			    boundary conditions, and per-particle fields.</para>
                </entry>
            </row>
            <row>
              <entry>POSCAR</entry>
              <entry><para>File format used by the <emphasis>ab initio</emphasis> simulation package <link xlink:href="http://www.vasp.at/">VASP</link>.</para></entry>
            </row>
            <row>
              <entry>IMD</entry>
              <entry><para>File format used by the molecular dynamics code <link xlink:href="http://imd.itap.physik.uni-stuttgart.de/">IMD</link>.</para></entry>
            </row>
            <row>
              <entry>CFG</entry>
              <entry><para>File format used by the <link xlink:href="http://li.mit.edu/Archive/Graphics/A/"><emphasis>AtomEye</emphasis> software</link>.</para></entry>
            </row>
            <row>
              <entry>PARCAS</entry>
              <entry><para>Binary file format written by the MD code <emphasis>Parcas</emphasis> developed in K. Nordlund's group at University of Helsinki.</para></entry>
            </row>
            <row>
              <entry>NetCDF</entry>
              <entry><para>Binary format for molecular dynamics data based on the standard NetCDF container. There exists an <link xlink:href="https://github.com/pastewka/lammps-netcdf">extension module for LAMMPS</link> that adds NetCDF output.</para></entry>
            </row>
            <row>
              <entry>PDB</entry>
              <entry><para>Basic support for Protein Data Bank (PDB) files.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>  
  </para>
  <para>
  	OVITO can load and display triangle meshes (polygonal data). This allows
  	to include arbitrary geometry in a visualization in addition to the particles. Triangle meshes can be read in the following format:  
    <informaltable>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>File format</entry>
              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>VTK</entry>
              <entry><para>Format used by the <emphasis>Visualization Toolkit</emphasis> (VTK). This text-based format is documented <link xlink:href="http://www.vtk.org/VTK/img/file-formats.pdf">here</link>. OVITO supports only triangular cells.</para></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>  
  </para>
  </simplesect>
  
</section>
