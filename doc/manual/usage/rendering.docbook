<?xml version="1.0" encoding="utf-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="usage.rendering" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Rendering</title>

  <para>
    <informalfigure>
      <screenshot><mediaobject><imageobject>
      <imagedata fileref="images/rendering/render_tab.png" format="PNG" scale="50" />
      </imageobject></mediaobject></screenshot>
    </informalfigure>
	  After you have created a pipeline for data analysis and visualization, at some point you may want to
    produce images or a movie for publications or presentations. For this, go to the
    <emphasis>Rendering</emphasis> tab in the command panel as shown on the right.
  </para>
  <para>
    The <guibutton>Render Active Viewport</guibutton> button launches the image rendering process for the active viewport (marked with a yellow border).
    OVITO will open a separate window to show the generated image, which can be saved to disk or copied to the clipboard from there.
  </para>
  <para>
    The <link linkend="core.render_settings">Render settings</link> panel controls various
    settings such as the resolution of the generated image, the background color and the filename
    under which the image or movie should be saved by OVITO. Note that you have the choice to either pick an output filename
    in advance or after rendering is completed (the window displaying the rendered image has a save button for it).
  </para>
  <para>
    OVITO comes with several rendering engines to choose from, which differ in terms of speed, visual quality and memory requirements.
    The default <link linkend="rendering.opengl_renderer">OpenGL renderer</link> is the fastest and produces pictures that are more or less
    identical to what you see in the interactive viewports. The <link linkend="rendering.tachyon_renderer">Tachyon renderer</link><ovito-pro/>, on the other hand,
    is a software-based raytracing engine, which can generate high-quality renderings including shadows, ambient occlusion shading and depth of field effects.
    See the <link linkend="rendering">Rendering</link> reference section for a description of all rendering engines included with OVITO.
      <informalfigure role="inline">
      <informaltable frame="none" colsep="0" rowsep="0">
        <tgroup cols="2">
          <tbody>
            <row valign="bottom">
              <entry>OpenGL renderer:</entry>
              <entry>Tachyon renderer:<ovito-pro/></entry>
              <entry>POV-Ray renderer:<ovito-pro/></entry>
            </row>
            <row valign="top">
              <entry><mediaobject><imageobject><imagedata fileref="images/rendering/renderer_example_opengl.png" format="PNG" /></imageobject></mediaobject></entry>
              <entry><mediaobject><imageobject><imagedata fileref="images/rendering/renderer_example_tachyon.png" format="PNG" /></imageobject></mediaobject></entry>
              <entry><mediaobject><imageobject><imagedata fileref="images/rendering/renderer_example_povray.png" format="PNG" /></imageobject></mediaobject></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      </informalfigure>
    </para>

  <simplesect xml:id="usage.rendering.animation">
    <title>Creating animations</title>
    <para>
      OVITO can produce videos from the loaded simulation sequence. To render an animation,
      select the <guilabel>Complete animation</guilabel> option in the <link linkend="core.render_settings">Render settings</link> panel and
      set an output filename for the video. OVITO's built-in video encoder supports video formats such as AVI and MPEG.
      The frame rate for the output video is set in the <link linkend="animation.animation_settings_dialog">animation settings</link> dialog.
      Alternatively, you can produce a series of image files, one per frame, and later combine them to a video using an external video encoding tool.
    </para>
  </simplesect>

<!--
  <simplesect xml:id="usage.rendering.show_render_frame">
    <title>Viewport preview mode</title>
    <para>
      <informalfigure><informaltable frame="none" colsep="0" rowsep="0">
        <tgroup cols="2">
          <tbody>
            <row valign="bottom">
              <entry>Interactive viewport (preview mode):</entry>
              <entry>Rendered image:</entry>
            </row>
            <row valign="top">
            <entry><mediaobject><imageobject><imagedata fileref="images/rendering/show_render_frame_example.png" format="PNG" scale="40" /></imageobject></mediaobject></entry>
            <entry><mediaobject><imageobject><imagedata fileref="images/rendering/show_render_frame_output.png" format="PNG" scale="40" /></imageobject></mediaobject></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable></informalfigure>
      To gauge the precise viewport region that will be visible in a rendered image,
      you can activate the <menuchoice><guimenuitem>Preview Mode</guimenuitem></menuchoice> for the active viewport.
      This option can be found in the <link linkend="usage.viewports.menu">viewport menu</link>, which can be opened by clicking
      the viewport's caption in the upper left corner.
     </para>
   </simplesect>
  -->
</section>
