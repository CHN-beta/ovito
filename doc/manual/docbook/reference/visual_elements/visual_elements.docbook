<?xml version="1.0" encoding="utf-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd"
         xml:id="visual_elements"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Visual elements</title>

  <para>
    <informalfigure><screenshot><mediaobject><imageobject>
       <imagedata fileref="images/visual_elements/visual_elements_panel.png" format="PNG" scale="65" />
    </imageobject></mediaobject></screenshot></informalfigure>
    OVITO distinguishes between the underlying data and the visual representations produced from that data.
    One typical example for this separation between <link linkend="scene_objects"><emphasis>data objects</emphasis></link>
    and their visual representation is the <literal>Position</literal> particle
    property, which holds the XYZ coordinates of a set of point-like particles. To visualize this data, OVITO automatically creates
    a <emphasis>visual element</emphasis> of the <link linkend="visual_elements.particles">Particles</link> type, which is responsible for rendering a
    corresponding set of spheres in the viewports, using the <literal>Position</literal> particle property as input data.
    The <link linkend="visual_elements.particles">Particles</link> visual element provides several parameters that let you control
    the visual appearance of the particles, e.g. the glyph shape (spheres, discs, cubes, etc.).
  </para>
  <para>
    This separation of <emphasis>data objects</emphasis> and <emphasis>visual elements</emphasis> provides additional flexibility with OVITO.
    It becomes possible to visualize the same data in multiple ways (several visual elements using the same input data) and to
    <link linkend="clone_pipeline">visualize multiple datasets side by side</link> (one visual element rendering different input data objects).
  </para>
  <para>
    Visual elements are usually created automatically by OVITO's <link linkend="usage.modification_pipeline">data pipeline system</link>
    alongside with the imported or computed data. They all appear under the "Visual elements" section of
    the <link linkend="usage.modification_pipeline.pipeline_listbox">pipeline editor</link> as indicated in the screenshot.
    You can disable individual visual elements by un-ticking the checkboxes next to them in the pipeline editor.
    This will turn off the visualization of the corresponding data in the interactive viewports and in rendered images.
  </para>
  <para>
  The following types of visual elements exist in OVITO:
  <informaltable>
        <tgroup cols="2">
          <colspec colname='name'/>
          <colspec colname='descr'/>
          <thead>
            <row>
              <entry>Visual&#xA0;element</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry><link linkend="visual_elements.particles">Particles</link></entry>
              <entry>Renders a set of particles using different glyph shapes</entry>
            </row>
            <row>
              <entry><link linkend="visual_elements.bonds">Bonds</link></entry>
              <entry>Renders the bonds between particles as cylinders</entry>
            </row>
            <row>
              <entry><link linkend="visual_elements.vectors">Vectors</link></entry>
              <entry>Renders arrow glyphs to graphically represent a vector particle property</entry>
            </row>
            <row>
              <entry><link linkend="visual_elements.simulation_cell">Simulation&#xA0;cell</link></entry>
              <entry>Renders the simulation box as a wireframe geometry</entry>
            </row>
            <row>
              <entry><link linkend="visual_elements.surface_mesh">Surface&#xA0;mesh</link></entry>
              <entry>Renders a smooth polygonal <link linkend="scene_objects.surface_mesh">surface mesh</link></entry>
            </row>
            <row>
              <entry><link linkend="visual_elements.triangle_mesh">Triangle&#xA0;mesh</link></entry>
              <entry>Renders a <link linkend="scene_objects.triangle_mesh">triangle mesh</link> loaded from a mesh geometry file</entry>
            </row>
            <row>
              <entry><link linkend="visual_elements.voxel_grid">Voxel&#xA0;grid</link></entry>
              <entry>Renders a <link linkend="scene_objects.voxel_grid">voxel grid</link></entry>
            </row>
            <row>
              <entry><link linkend="visual_elements.trajectory_lines">Trajectory&#xA0;lines</link></entry>
              <entry>Renders a set of continuous lines to visualize the particle trajectories created with the
              <link linkend="particles.modifiers.generate_trajectory_lines">Generate trajectory lines</link> modifier</entry>
            </row>
            <row>
              <entry><link linkend="visual_elements.dislocations">Dislocations</link></entry>
              <entry>Renders dislocation lines extracted by the
              <link linkend="particles.modifiers.dislocation_analysis">Dislocation analysis</link> modifier</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
   </para>

  <simplesect>
  <title>See also</title>
    <para>
      <pydoc-link href="modules/ovito_vis" anchor="ovito.vis.DataVis"><classname>DataVis</classname> (Python API)</pydoc-link>
    </para>
  </simplesect>

  <xi:include href="particles.docbook"/>
  <xi:include href="bonds.docbook"/>
  <xi:include href="vectors.docbook"/>
  <xi:include href="simulation_cell.docbook"/>
  <xi:include href="surface_mesh.docbook"/>
  <xi:include href="triangle_mesh.docbook"/>
  <xi:include href="voxel_grid.docbook"/>
  <xi:include href="trajectory_lines.docbook"/>
  <xi:include href="dislocations.docbook"/>

</section>
