**************************************************************************
Compiler: Microsoft Visual C++ 2013
**************************************************************************

Typical build directory layout:

ovito/
  32bit/                (Build directory for 32-bit dependencies)
     ovito_release/     (Build directory for 32-bit OVITO version)
  64bit/                (Build directory for 64-bit dependencies)
     ovito_release/     (Build directory for 64-bit OVITO version)
  source/               (OVITO's source code)

Source code of third-party libraries is extracted into subdirectories of 'ovito/'.

**************************************************************************
zlib (http://www.zlib.net/)
**************************************************************************
mkdir zlib
cd zlib
cmake -G "NMake Makefiles" -DCMAKE_INSTALL_PREFIX=../zlib_install -DCMAKE_BUILD_TYPE=Release ..\..\zlib-1.2.8
nmake install

**************************************************************************
Qt
**************************************************************************
Install components (Qt 5.4.1) under C:\Qt\ : 
   msvc2013 32-bit OpenGL
   msvc2013 64-bit OpenGL

**************************************************************************
Python 3.x
**************************************************************************
Select installation component "pip", deselect all other components.
cd Scripts
easy_install sphinx

----- Install NumPy from http://www.lfd.uci.edu/~gohlke/pythonlibs/#numpy ---

----- Install SIP ----
..\XXbit\Python\python.exe configure.py
nmake
nmake install

----- Install PyQt5 ----
..\XXbit\Python\python.exe configure.py ^
   --concatenate ^
   --concatenate-split 10 ^
   --confirm-license ^
   --no-designer-plugin ^
   --no-qml-plugin ^
   --sip=..\XXbit\Python\sip.exe ^
   --enable QtCore ^
   --enable QtGui ^
   --enable QtWidgets ^
   --enable QtNetwork ^
   --enable QtOpenGL ^
   --enable QtSvg
nmake
nmake install

**************************************************************************
Boost libraries (release 1.57):
**************************************************************************

--- Create file user-config.jam:
using python 
	: 3.4
	: ..\\32bit\\Python\\python.exe 
	: ..\\32bit\\Python\\include
	: ..\\32bit\\Python\\libs ;

--- Compile Boost:
cd 
bootstrap.bat msvc
b2 --prefix=../32bit/boost --user-config=../32bit/user-config.jam address-model=32 link=shared threading=multi runtime-link=shared toolset=msvc --ignore-mpi --with-system --with-thread --with-python install
b2 --prefix=../64bit/boost --user-config=../64bit/user-config.jam address-model=64 link=shared threading=multi runtime-link=shared toolset=msvc --ignore-mpi --with-system --with-thread --with-python install

**************************************************************************
HDF5 (version 1.8.x)
**************************************************************************
mkdir hdf5
cd hdf5
cmake -G "NMake Makefiles" ^
   -DCMAKE_BUILD_TYPE=Release ^
   -DCMAKE_INSTALL_PREFIX=../hdf5_install ^
   -DBUILD_SHARED_LIBS=ON ^
   -DHDF5_ENABLE_Z_LIB_SUPPORT=ON ^
   -DHDF5_BUILD_HL_LIB=ON ^
   -DZLIB_INCLUDE_DIR=%cd:\=/%/../zlib_install/include ^
   -DZLIB_LIBRARY=%cd:\=/%/../zlib_install/lib/zlib.lib ^
   ../../hdf5-1.8.14

nmake install

**************************************************************************
NetCDF (version 4.3.x)
**************************************************************************
mkdir netcdf
cd netcdf
cmake -G "NMake Makefiles" ^
   -DCMAKE_BUILD_TYPE=Release ^
   -DCMAKE_INSTALL_PREFIX=../netcdf_install ^
   -DENABLE_DAP=OFF ^
   -DENABLE_EXAMPLES=OFF ^
   -DENABLE_TESTS=OFF ^
   -DBUILD_TESTING=OFF ^
   -DBUILD_UTILITIES=OFF ^
   -DENABLE_HDF4=OFF ^
   -DUSE_HDF5=ON ^
   -DHDF5_INCLUDE_DIR=%cd:\=/%/../hdf5_install/include ^
   -DHDF5_LIB=%cd:\=/%/../hdf5_install/lib/hdf5.lib ^
   -DHDF5_HL_LIB=%cd:\=/%/../hdf5_install/lib/hdf5_hl.lib ^
   -DZLIB_INCLUDE_DIR=%cd:\=/%/../zlib_install/include ^
   -DZLIB_LIBRARY=%cd:\=/%/../zlib_install/lib/zlib.lib ^
   ../../netcdf-4.3.2

nmake install
   
**************************************************************************
QScintilla2
**************************************************************************
mkdir qscintilla
cd qscintilla
qmake ..\..\QScintilla-gpl-2.9\Qt4Qt5\qscintilla.pro
nmake

**************************************************************************
libav
**************************************************************************
- Install MSYS (MinGW)
- Download YASM (32 and 64 bit)
git clone git://git.libav.org/libav.git libav
cd 32bit
mkdir libav
cd libav
export PATH="$PWD/../yasm:$PATH"
../../libav/configure \
   --toolchain=msvc \
   --disable-programs \
   --enable-gpl \
   --disable-static \
   --enable-shared \
   --prefix=../libav_install \
   --extra-cflags=-I$PWD/../zlib_install/include  \
   --extra-ldflags=-L$PWD/../zlib_install/lib \
   --enable-zlib \
   --disable-doc \
   --disable-network \
   --disable-filters \
   --disable-decoders \
   --disable-debug
make install

**************************************************************************
OVITO:
**************************************************************************
mkdir ovito_release
cd ovito_release
cmake -G "NMake Makefiles" ^
   -DCMAKE_BUILD_TYPE=Release ^
   -DCMAKE_INSTALL_PREFIX=../ovito_release_install ^
   -DZLIB_INCLUDE_DIR=%cd:\=/%/../zlib_install/include ^
   -DZLIB_LIBRARY=%cd:\=/%/../zlib_install/lib/zlib.lib ^
   -Dnetcdf_DIR=%cd:\=/%/../netcdf_install/share/cmake ^
   -DBOOST_INCLUDEDIR=%cd:\=/%/../boost/include ^
   -DQSCINTILLA_INCLUDE_DIR=%cd:\=/%/../../QScintilla-gpl-2.9\Qt4Qt5 ^
   -DQSCINTILLA_LIBRARY=%cd:\=/%/../qscintilla/release/qscintilla2.lib ^
   -DPYTHON_LIBRARY=%cd:\=/%/../Python/libs/python34.lib ^
   -DPYTHON_INCLUDE_DIR=%cd:\=/%/../Python/include ^
   -DXSLT_PROCESSOR=../../libxslt-1.1.26.win32/bin/xsltproc.exe ^
   -DSPHINX_PROCESSOR_PATH=%cd:\=/%/../Python/Scripts ^
   -DLIBAV_INCLUDE_DIR=%cd:\=/%/../libav_install/include ^
   -DLIBAV_LIBRARY_DIR=%cd:\=/%/../libav_install/bin ^
   -DOVITO_BUILD_DOCUMENTATION=ON ^
   ../../source

nmake install

---- Copy missing DLLs into installation dir of 32-bit version ----

C:\Program Files (x86)\CMake 2.8\bin\libeay32.dll
C:\Program Files (x86)\CMake 2.8\bin\ssleay32.dll