**************************************************************************
Compiler:
    Microsoft Visual Studio 2019 Build Tools (Command line only)

spellcheck: off
**************************************************************************

Typical layout for the build directory:

ovito/                  (Root directory)
  deps/                 (All third-party tools and libraries)
  source/               (OVITO's source code)
  release/              (Build directory)

In the following, all source code packages of third-party libraries must be
extracted into subdirectory 'deps/':

**************************************************************************
zlib 1.2.11 (http://www.zlib.net/)
**************************************************************************
cd deps
cd zlib-1.2.11
mkdir build
cd build
cmake -G "NMake Makefiles" -DCMAKE_INSTALL_PREFIX=../../zlib -DCMAKE_BUILD_TYPE=Release ..
nmake install

**************************************************************************
Qt 5.12.4
**************************************************************************
Install the following component in C:\Qt\ :
   msvc2017 64-bit

**************************************************************************
Python 3.x
**************************************************************************

----- Disable user site packages -----
Edit config file "deps\Python\Lib\site.py" and set
  ENABLE_USER_SITE = False

----- Install Python modules ---
cd deps\Python\
Scripts\pip3 install sphinx
Scripts\pip3 install numpy
Scripts\pip3 install matplotlib

**************************************************************************
SIP 4.19.18
**************************************************************************
cd deps
cd sip-4.19.18
..\Python\python.exe configure.py
nmake
nmake install
cd ..\Python
Scripts\pip3 install PyQt5-sip

**************************************************************************
PyQt5 5.13.0
**************************************************************************
cd deps
cd PyQt5_gpl-5.13.0
..\Python\python.exe configure.py ^
   --concatenate ^
   --concatenate-split 10 ^
   --confirm-license ^
   --no-designer-plugin ^
   --no-qml-plugin ^
   --sip=..\Python\sip.exe ^
   --enable QtCore ^
   --enable QtGui ^
   --enable QtWidgets
nmake
nmake install

**************************************************************************
Boost 1.70
**************************************************************************
No installation needed
Extract archive to \deps\boost_1_70_0\

**************************************************************************
HDF5
**************************************************************************
cd deps
cd hdf5-1.10.5
mkdir build
cd build
cmake -G "NMake Makefiles" ^
   -DCMAKE_BUILD_TYPE=Release ^
   -DCMAKE_INSTALL_PREFIX=../../hdf5 ^
   -DBUILD_SHARED_LIBS=ON ^
   -DHDF5_ENABLE_Z_LIB_SUPPORT=ON ^
   -DHDF5_BUILD_HL_LIB=ON ^
   -DBUILD_TESTING=OFF ^
   -DHDF5_BUILD_EXAMPLES=OFF ^
   -DZLIB_INCLUDE_DIR=%cd:\=/%/../../zlib/include ^
   -DZLIB_LIBRARY=%cd:\=/%/../../zlib/lib/zlib.lib ^
   ..
nmake install

**************************************************************************
NetCDF
**************************************************************************
cd deps
cd netcdf-c-4.7.0
mkdir build
cd build
set HDF5_DIR=%cd:\=/%/../../hdf5/cmake
cmake -G "NMake Makefiles" ^
   -DCMAKE_BUILD_TYPE=Release ^
   -DCMAKE_INSTALL_PREFIX=../../netcdf ^
   -DENABLE_DAP=OFF ^
   -DENABLE_EXAMPLES=OFF ^
   -DENABLE_TESTS=OFF ^
   -DBUILD_TESTING=OFF ^
   -DBUILD_UTILITIES=OFF ^
   -DENABLE_HDF4=OFF ^
   -DUSE_HDF5=ON ^
   -DHDF5_INCLUDE_DIR=%cd:\=/%/../../hdf5/include ^
   -DHDF5_LIB=%cd:\=/%/../../hdf5/lib/hdf5.lib ^
   -DHDF5_HL_LIB=%cd:\=/%/../../hdf5/lib/hdf5_hl.lib ^
   -DZLIB_INCLUDE_DIR=%cd:\=/%/../../zlib/include ^
   -DZLIB_LIBRARY=%cd:\=/%/../../zlib/lib/zlib.lib ^
   ..
nmake install

**************************************************************************
QScintilla2
**************************************************************************
cd deps
mkdir qscintilla
cd qscintilla
qmake ..\QScintilla_gpl-2.11.2\Qt4Qt5\qscintilla.pro
nmake

**************************************************************************
OpenSSL 1.1.0*
**************************************************************************
- Download source code
- Install ActiveState Perl
- Follow build instructions for Win64 platform.
cd deps
set OVITO_DEPS_DIR=%USERPROFILE%\ovito\deps
cd openssl-1.1.0k
perl Configure VC-WIN64A ^
   no-asm ^
   zlib ^
   --with-zlib-include=%cd:\=/%/../zlib/include ^
   --with-zlib-lib=%cd:\=/%/../zlib/lib/zlib.lib ^
   --prefix=%OVITO_DEPS_DIR%/openssl ^
   --openssldir=%OVITO_DEPS_DIR%/openssl/SSL

**************************************************************************
libssh 0.9.0
Note: Update the LGPL instructions in the user manual when changing this.
**************************************************************************
cd deps
cd libssh-0.9.0
mkdir build
cd build
cmake -G "NMake Makefiles" ^
   -DCMAKE_BUILD_TYPE=Release ^
   -DCMAKE_INSTALL_PREFIX=../../libssh ^
   -DZLIB_INCLUDE_DIR=%cd:\=/%/../../zlib/include ^
   -DZLIB_LIBRARY=%cd:\=/%/../../zlib/lib/zlib.lib ^
   -DOPENSSL_ROOT_DIR=%cd:\=/%/../../openssl ^
   ..
nmake
nmake install

**************************************************************************
Libav
Note: Update LGPL instructions in the user manual when changing this.
**************************************************************************
- Install MSYS2
cd deps
git clone git://git.libav.org/libav.git libav_source
- Execute "c:\msys64\msys2_shell.cmd -msys2 -here -full-path" from MSVC command prompt.
- Install YASM (MSYS2: "pacman -S yasm")
- Install make (MSYS2: "pacman -S make")
export LIB="$LIB;$PWD/zlib/lib"
export INCLUDE="$INCLUDE;$PWD/zlib/include"
export PATH="/c/Program Files (x86)/Microsoft Visual Studio/2019/BuildTools/VC/Tools/MSVC/14.21.27702/bin/HostX64/x64:$PATH"
cd libav_source
mkdir build
cd build
../configure \
   --toolchain=msvc \
   --disable-programs \
   --disable-static \
   --enable-shared \
   --prefix=../../libav \
   --extra-cflags=-I$PWD/../zlib/include  \
   --extra-ldflags=-L$PWD/../zlib/lib \
   --enable-zlib \
   --disable-doc \
   --disable-network \
   --disable-filters \
   --disable-decoders \
   --disable-demuxers \
   --disable-debug
make install

**************************************************************************
Download and build Intel Embree
**************************************************************************
cd deps
cd embree-3.5.2
- Download TBB lib, install in "embree-3.5.2/tbb/"
- Download ISPC compiler, install in "deps/ispc/"
mkdir build
cd build
cmake -G "NMake Makefiles" ^
   -DCMAKE_BUILD_TYPE=Release ^
   -DEMBREE_ISPC_EXECUTABLE=%cd:\=/%/../../ispc/bin/ispc.exe ^
   -DCMAKE_INSTALL_PREFIX=../../embree ^
   ..
cmake --build . --config Release --target install

**************************************************************************
Download and build OSPRay
**************************************************************************
cd deps
cd ospray-1.8.5
mkdir build
cd build
cmake -G "NMake Makefiles" ^
   -DCMAKE_BUILD_TYPE=Release ^
   -DISPC_EXECUTABLE=%cd:\=/%/../../ispc/bin/ispc.exe ^
   -DCMAKE_INSTALL_PREFIX=../../ospray ^
   -Dembree_DIR=%cd:\=/%/../../embree ^
   -DTBB_ROOT=../../embree-3.5.2/tbb ^
   -DBUILD_SHARED_LIBS=ON ^
   -DCMAKE_CXX_STANDARD=14 ^
   -DOSPRAY_ENABLE_TUTORIALS=OFF ^
   ..
cmake --build . --config Release --target install

**************************************************************************
Xsltproc & libxml2
**************************************************************************
https://www.zlatkovic.com/libxml.en.html  (libxslt)

**************************************************************************
FFTW-3
**************************************************************************
http://www.fftw.org/install/windows.html
cd deps
cd fftw-3
lib /def:libfftw3-3.def

**************************************************************************
OpenVR
**************************************************************************
git clone https://github.com/ValveSoftware/openvr.git

**************************************************************************
Create an app package signing certificate:
**************************************************************************
MakeCert /n "CN=ovito.org, O=ovito.org, L=Darmstadt, C=Germany" /r /h 0 /eku "1.3.6.1.5.5.7.3.3,1.3.6.1.4.1.311.10.3.13" /e 12/31/2017 /sv ovito.pvk ovito.cer
Pvk2Pfx /pvk ovito.pvk  /spc ovito.cer /pfx ovito.pfx
# Run as administrator:
Certutil -addStore TrustedPeople ovito.cer

**************************************************************************
OVITO statically linked release version:
**************************************************************************
mkdir release
cd release
cmake -G "NMake Makefiles" ^
   -DCMAKE_BUILD_TYPE=Release ^
   -DCMAKE_INSTALL_PREFIX=../release_install ^
   -DOVITO_REDISTRIBUTABLE_PACKAGE=ON ^
   -DZLIB_INCLUDE_DIR=%cd:\=/%/../deps/zlib/include ^
   -DZLIB_LIBRARY=%cd:\=/%/../deps/zlib/lib/zlib.lib ^
   -Dnetcdf_DIR=%cd:\=/%/../deps/netcdf/lib/cmake/netCDF ^
   -DHDF5_DIR=%cd:\=/%/../deps/hdf5/cmake/hdf5 ^
   -DBOOST_INCLUDEDIR=%cd:\=/%/../deps/boost_1_70_0 ^
   -DQSCINTILLA_INCLUDE_DIR=%cd:\=/%/../deps/QScintilla_gpl-2.11.2/Qt4Qt5 ^
   -DQSCINTILLA_LIBRARY=%cd:\=/%/../deps/qscintilla/release/qscintilla2_qt5.lib ^
   -DPYTHON_LIBRARY=%cd:\=/%/../deps/Python/libs/python37.lib ^
   -DPYTHON_INCLUDE_DIR=%cd:\=/%/../deps/Python/include ^
   -DPYTHON_EXECUTABLE=%cd:\=/%/../deps/Python/python.exe ^
   -DXSLT_PROCESSOR=../deps/libxslt-1.1.26.win32/bin/xsltproc.exe ^
   -DLIBAV_INCLUDE_DIR=%cd:\=/%/../deps/libav/include ^
   -DLIBAV_LIBRARY_DIR=%cd:\=/%/../deps/libav/bin ^
   -DOVITO_BUILD_DOCUMENTATION=ON ^
   -DOVITO_BUILD_MONOLITHIC=ON ^
   -DOVITO_BUILD_PLUGIN_VR=OFF ^
   -DOVITO_DOUBLE_PRECISION_FP=ON ^
   -DOPENVR_INCLUDE_DIR=%cd:\=/%/../deps/openvr/headers ^
   -DOPENVR_LIBRARY=%cd:\=/%/../deps/openvr/lib/win64/openvr_api.lib ^
   -DFFTW3_INCLUDE_DIR=%cd:\=/%/../deps/fftw-3 ^
   -DFFTW3_LIBRARY=%cd:\=/%/../deps/fftw-3/libfftw3-3.lib ^
   -DLIBSSH_INCLUDE_DIR=%cd:\=/%/../deps/libssh/include ^
   -DLIBSSH_LIBRARY=%cd:\=/%/../deps/libssh/lib/ssh.lib ^
   -DOPENSSL_ROOT_DIR=%cd:\=/%/../deps/openssl ^
   -DOVITO_BUILD_PLUGIN_OSPRAY=ON ^
   -Dospray_DIR=%cd:\=/%/../deps/ospray/lib/cmake/ospray-1.8.5 ^
   -Dembree_DIR=%cd:\=/%/../deps/embree ^
   -DTBB_ROOT=%cd:\=/%/../deps/embree-3.5.2/tbb ^
   -DTBB_DIR=%cd:\=/%/../deps/embree-3.5.2/tbb/cmake ^
   -DISPC_EXECUTABLE=%cd:\=/%/../deps/ispc/bin/ispc.exe ^
   ../source

**************************************************************************
pack.bat:
**************************************************************************
cmake .
nmake
cpack
cpack -G ZIP

**************************************************************************
Debug version:
**************************************************************************
mkdir ovito_debug
cd ovito_debug
cmake -G "NMake Makefiles" ^
   -DCMAKE_BUILD_TYPE=Debug ^
   -DCMAKE_INSTALL_PREFIX=../ovito_debug_install ^
   -DZLIB_INCLUDE_DIR=%cd:\=/%/../zlib_install/include ^
   -DZLIB_LIBRARY=%cd:\=/%/../zlib_install/lib/zlib.lib ^
   -Dnetcdf_DIR=%cd:\=/%/../netcdf_install/lib/cmake/netCDF ^
   -DHDF5_DIR=%cd:\=/%/../hdf5_install/cmake ^
   -DBOOST_INCLUDEDIR=%cd:\=/%/../../boost_1_62_0 ^
   -DQSCINTILLA_INCLUDE_DIR=%cd:\=/%/../../QScintilla_gpl-2.10.1\Qt4Qt5 ^
   -DQSCINTILLA_LIBRARY=%cd:\=/%/../qscintilla/release/qscintilla2_qt5.lib ^
   -DPYTHON_LIBRARY=%cd:\=/%/../Python/libs/python36.lib ^
   -DPYTHON_INCLUDE_DIR=%cd:\=/%/../Python/include ^
   -DPYTHON_EXECUTABLE=%cd:\=/%/../Python/bin/python.exe ^
   -DXSLT_PROCESSOR=../deps/libxslt-1.1.26.win32/bin/xsltproc.exe ^
   -DLIBAV_INCLUDE_DIR=%cd:\=/%/../deps/libav/include ^
   -DLIBAV_LIBRARY_DIR=%cd:\=/%/../deps/libav/bin ^
   -DLIBSSH_INCLUDE_DIR=%cd:\=/%/../deps/libssh/include ^
   -DLIBSSH_LIBRARY=%cd:\=/%/../deps/libssh/lib/ssh.lib ^
   -DOPENSSL_ROOT_DIR=%cd:\=/%/../deps/openssl ^
   -DOVITO_BUILD_DOCUMENTATION=OFF ^
   -DOVITO_DOUBLE_PRECISION_FP=ON ^
   -DOVITO_BUILD_MONOLITHIC=ON ^
   -DOVITO_REDISTRIBUTABLE_PACKAGE=ON ^
   -DFFTW3_INCLUDE_DIR=%cd:\=/%/../fftw ^
   -DFFTW3_LIBRARY=%cd:\=/%/../deps/fftw-3/libfftw3-3.lib ^
   ../../source
