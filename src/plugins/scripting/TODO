* Some sort of wrapper to catch C++ exceptions on accessing
  properties, calling slots, ... (use QScriptClass)

* Keep the right references in wrapper objects instead of pointers
  (probably weak references so that an object can become invalid
  without keeping data in memory needlessly).

* clean up existing JS API

* document existing JS API

* add
** access to box and particle properties
** access to modifier properties
** exportFile()
** Wrapper for a file (I/O) if not already in JS
** ...

* command line scripting:

      ovito --script foo.js # No GUI will open, ovito closes afterwards

* clean up #included headers

* GUI script interface:
** notebook (like sage etc.)
** load/save file
*** for notebook, save every cell, perhaps separate by some magical comment
** access to files/modifiers loaded/created with GUI
